type Query {
  device(port: String!): FlightController!
}

type FlightController {
  connection: ConnectionStatus!
  attitude: Attitude!
  status: Status!
  rc: RC!
  apiVersion: String!
}

type ConnectionStatus {
  connected: Boolean!
  connecting: Boolean!
  bytesRead: Int!
  bytesWritten: Int!
  packetErrors: Int!
}

type Attitude {
  roll: Float!
  pitch: Float!
  heading: Float!
}

type Status {
  cycleTime: Int!
  i2cError: Int!
  activeSensors: Int!
  cpuload: Float!
}

type RC {
  channels: [Int!]!
  tuning: RCTuning!
  deadband: RCDeadband!
}

type RCTuning {
  rcRate: Int!
  rcExpo: Int!
  rollPitchRate: Int!
  pitchRate: Int!
  rollRate: Int!
  yawRate: Int!
  dynamicThrottlePid: Int!
  throttleMid: Int!
  throttleExpo: Int!
  dynamicThrottleBreakpoint: Int!
  rcYawExpo: Int!
  rcYawRate: Int!
  rcPitchRate: Int!
  rcPitchExpo: Int!
  throttleLimitType: Int!
  throttleLimitPercent: Int!
  rollRateLimit: Int!
  pitchRateLimit: Int!
  yawRateLimit: Int!
}

type RCDeadband {
  deadband: Int!
  yawDeadband: Int!
  altHoldDeadhand: Int!
  deadband3dThrottle: Int!
}

